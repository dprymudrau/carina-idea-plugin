<!-- Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license. -->
<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->

<idea-plugin>

  <!-- Unique id for this plugin. Must stay constant for the life of the plugin. -->
  <id>org.intellij.sdk.toolWindow</id>

  <!-- Text to display as name on Settings | Plugin page -->
  <name>SDK: Tool Window Sample</name>

  <!-- Indicate this plugin can be loaded in all IntelliJ Platform-based products. -->
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.java</depends>
  <depends>com.intellij.java</depends>

  <!-- Text to display as description on Settings | Plugin page -->
  <description>
    <![CDATA[
      This sample plugin illustrates how to create your custom tool window.<br>
      See the
      <a href="https://plugins.jetbrains.com/docs/intellij/tool-windows.html">Tool Windows</a>
      for more information.
    ]]>
  </description>
  <change-notes>
    <![CDATA[
      <ul>
        <li><b>2.0.0</b> Convert to Gradle-based plugin.</li>
        <li><b>1.0.0</b> Release 2018.3 and earlier.</li>
      </ul>
    ]]>
  </change-notes>

  <!-- Text to display as company information on Settings | Plugin page -->
  <vendor url="https://plugins.jetbrains.com">IntelliJ Platform SDK</vendor>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceInterface="com.solvd.carinaideaplugin.generators.ispresent.GenerateIsPresentActionHandler"
                        serviceImplementation="com.solvd.carinaideaplugin.generators.ispresent.GenerateIsPresentActionHandlerImpl"/>
  </extensions>

  <extensionPoints>
    <extensionPoint qualifiedName="com.solvd.carinaideaplugin.generateFilter" interface="com.solvd.carinaideaplugin.filter.GenerateFilter" dynamic="true"/>
<!--    <extensionPoint qualifiedName="com.intellij.generateAccessorProvider" interface="com.intellij.util.NotNullFunction" dynamic="true"/>-->
  </extensionPoints>

  <actions>
    <group>
      <action id="com.solvd.carinaideaplugin.generators.ispresent.GenerateIsPresentPopUpDialogAction"
              class="com.solvd.carinaideaplugin.generators.ispresent.GenerateIsPresentPopUpDialogAction" text="isElementPresent()">
        <add-to-group group-id="GenerateGroup" anchor="first"/>
      </action>
      <action id="com.solvd.carinaideaplugin.generators.gettext.GenerateGetTextPopUpDialogAction"
              class="com.solvd.carinaideaplugin.generators.gettext.GenerateGetTextPopUpDialogAction" text="getText()">
        <add-to-group group-id="GenerateGroup" anchor="first"/>
      </action>
      <action id="com.solvd.carinaideaplugin.generators.click.GenerateClickPopUpDialogAction"
              class="com.solvd.carinaideaplugin.generators.click.GenerateClickPopUpDialogAction" text="click()">
        <add-to-group group-id="GenerateGroup" anchor="first"/>
      </action>
    </group>
    <action id="com.solvd.carinaideaplugin.generators.newImpl.GenerateIsElementPresentAction"
            class="com.solvd.carinaideaplugin.generators.newImpl.GenerateIsElementPresentAction" text="isElementPresent() new impl">
      <add-to-group group-id="GenerateGroup" anchor="first"/>
    </action>
  </actions>
</idea-plugin>
